package by.it_academy.Lesson14;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Regex {
    public static void main(String[] args) {
        String text = "Одно Оз Зрименений группировки — повторное использование ранее найденных групп символов (подстрок, блоков, отмеченных подвыражений, захватов)." +
                " При обработке выражения подстро́ки, найденные по шаблону внутри группы, " +
                "сохраняются в отдельной области памяти и и получают номер, начиная с единицы. " +
                "Каждой подстроке соответствует пара скобок в регулярном выражении. " +
                "Квантификация группы не влияет на сохранённый результат, то есть, сохраняется лишь первое вхождение. " +
                "Обычно поддерживается до 9 нумерованных подстрок с номерами от 1 до 9, но некоторые интерпретаторы позволяют работать с бо́льшим количеством. " +
                "Впоследствии в пределах данного регулярного выражения можно использовать обозначения от \\1 до \\9 для " +
                "проверки на совпадение с ранее найденной подстрокой.";
        Pattern p = Pattern.compile("(?i)(?u)(\\p{L}*(\\p{L}))(?=[^\\p{L}]+\\2)");
        Matcher matcher = p.matcher(text);
        while (matcher.find()){
            System.out.println(matcher.group());
        }
    }
}
